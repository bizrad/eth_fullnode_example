---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consensus-layer
  labels:
    app.kubernetes.io/name: beacon
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: beacon
  serviceName: consensus-layer-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: beacon
    spec:
      serviceAccountName: consensus-layer
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        - name: init-nodeport
          image: "lachlanevenson/k8s-kubectl:v1.25.4"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME})" -n ethnode -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="InternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
        - name: init-chown-data
          image: "busybox:1.34.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "10001:10001", "/data"]
          volumeMounts:
            - name: storage
              mountPath: "/data"
      containers:
        - name: lighthouse
          image: "sigp/lighthouse:latest"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - >
              . /env/init-nodeport;
              exec lighthouse
              beacon_node
              --datadir=/data
              --disable-upnp
              --disable-enr-auto-update
              --enr-address=$EXTERNAL_IP
              --enr-tcp-port=$EXTERNAL_PORT
              --enr-udp-port=$EXTERNAL_PORT
              --listen-address=0.0.0.0
              --port=9000
              --discovery-port=9000
              --http
              --http-address=0.0.0.0
              --http-port=5052
              --execution-jwt=/data/jwt.hex
              --metrics
              --metrics-address=0.0.0.0
              --metrics-port=5054
              --checkpoint-sync-url=https://mainnet-checkpoint-sync.attestant.io
              --execution-endpoint=http://execution-layer:8551
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: 9000
              protocol: TCP
            - name: p2p-udp
              containerPort: 9000
              protocol: UDP
            - name: http-api
              containerPort: 5052
              protocol: TCP
            - name: metrics
              containerPort: 5054
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-api
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-api
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      terminationGracePeriodSeconds: 300
      volumes:
        - name: jwt
          secret:
            secretName: consensus-layer-jwt
        - name: env-nodeport
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "1Gi"
      storageClassName: hc-volume100493370